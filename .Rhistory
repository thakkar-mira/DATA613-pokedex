do_op(2, 4, "divide")
do_op(2, 4, "ply")
do_op <- function(x, y, op) {
switch (op,
plus = x + y,
minus = x - y,
times = x * y,
divide = x/y,
stop("Unknown op!"))
}
do_op(2, 4, "plus")
do_op(2, 4, "divide")
do_op(2, 4, 3)
do_op(2, 4, "ply")
fizzbuzz <- function(x) {
is3 <- x %% 3 == 0
is5 <- x %% 5 == 0
if(is3 && is5) {
return("fizzbuzz")
} else if(is3) {
return("fizz")
} else if (is5) {
return("buzz")
} else {
return(x)
}
}
fizzbuzz(1:50)
fizzbuzz <- function(x) {
is3 <- x %% 3 == 0
is5 <- x %% 5 == 0
if(is3 && is5) {
return("fizzbuzz")
} else if(is3) {
return("fizz")
} else if (is5) {
return("buzz")
} else {
return(x)
}
}
fizzbuzz(9)
fizzbuzz <- function(x) {
is3 <- x %% 3 == 0
is5 <- x %% 5 == 0
if(is3 && is5) {
return("fizzbuzz")
} else if(is3) {
return("fizz")
} else if (is5) {
return("buzz")
} else {
return(x)
}
}
fizzbuzz(25)
fizzbuzz <- function(x) {
is3 <- x %% 3 == 0
is5 <- x %% 5 == 0
if(is3 && is5) {
return("fizzbuzz")
} else if(is3) {
return("fizz")
} else if (is5) {
return("buzz")
} else {
return(x)
}
}
fizzbuzz(1500)
fizzbuzz <- function(x) {
is3 <- x %% 3 == 0
is5 <- x %% 5 == 0
if(is3 && is5) {
return(fizzbuzz)
} else if(is3) {
return("fizz")
} else if (is5) {
return("buzz")
} else {
return(x)
}
}
fizzbuzz(1500)
fizzbuzz <- function(x) {
is3 <- x %% 3 == 0
is5 <- x %% 5 == 0
if(is3 && is5) {
return("fizzbuzz")
} else if(is3) {
return("fizz")
} else if (is5) {
return("buzz")
} else {
return(x)
}
}
fizzbuzz(1500)
Cases <- c(0, 4, 28, 120, 310, 432, 154, 57, 28, 14, 0, 0)
Month <- c("January", "February", "March", "April", "May", "June", "July", "July", "August", "September", "October", "November", "December")
Rate <- c(0, .2, 1.2, 5.5, 13.7, 19.7, 6.8, 2.5, 1.3, .6, 0, 0)
epi <- data.frame(Cases, Month, Rate, stringsAsFactors = F)
Month <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
epi <- data.frame(Cases, Month, Rate, stringsAsFactors = F)
View(epi)
library(tidyverse)
library(plotly)
epi_plot <- ggplot(epi) +
geom_bar(aes(Month, Cases), stat = "identity", color = "light blue") +
geom_line(aes(Month, Rate), stat = "identity", color = "red") +
xlab("Month") +
ylab("Cases") +
theme_bw()
ggplotly(epi_plot)
epi_plot <- ggplot(epi) +
geom_bar(aes(Month, Cases), stat = "identity", color = "light blue") +
geom_smooth(aes(Month, Rate), stat = "identity", color = "red") +
xlab("Month") +
ylab("Cases") +
theme_bw()
ggplotly(epi_plot)
epi_plot <- ggplot(epi) +
geom_bar(aes(Month, Cases), stat = "identity", color = "light blue") +
geom_smooth(aes(Month, Rate), stat = "identity", color = "red") +
xlab("Month") +
ylab("Cases") +
theme_bw()
ggplotly(epi_plot)
epi_plot <- ggplot(epi) +
geom_bar(aes(Month, Cases), stat = "identity", color = "light blue") +
geom_line(aes(Month, Rate), stat = "identity", color = "red") +
xlab("Month") +
ylab("Cases") +
theme_bw()
ggplotly(epi_plot)
epi_plot <- ggplot(epi) +
geom_bar(aes(Month, Cases), stat = "identity", color = "light blue") +
geom_line(aes(Month, Rate), stat = "identity", color = "red") +
scale_y_continuous(sec.axis=sec_axis(~.*0.01,name="Percentage"))
epi_plot <- ggplot(epi) +
geom_bar(aes(Month, Cases), stat = "identity", color = "light blue") +
geom_line(aes(Month, Rate), stat = "identity", color = "red") +
scale_y_continuous(sec.axis=sec_axis(~.*0.01,name="Percentage")) +
xlab("Month") +
ylab("Cases") +
theme_bw()
ggplotly(epi_plot)
epi_plot <- ggplot(epi) +
geom_bar(aes(Month, Cases), stat = "identity", color = "light blue") +
geom_line(aes(Month, Rate), stat = "identity", color = "red") +
scale_y_continuous(sec.axis=sec_axis(~.*100,name="Percentage")) +
xlab("Month") +
ylab("Cases") +
theme_bw()
ggplotly(epi_plot)
epi_plot <- ggplot(epi) +
geom_bar(aes(Month, Cases), stat = "identity", color = "light blue") +
geom_line(aes(Month, Rate), stat = "identity", color = "red", size = 2) +
scale_y_continuous(sec.axis=sec_axis(~.*.01,name="Percentage")) +
xlab("Month") +
ylab("Cases") +
theme_bw()
ggplotly(epi_plot)
epi_plot <- ggplot(epi) +
geom_bar(aes(Month, Cases), stat = "identity", color = "light blue") +
geom_line(aes(Month, Rate), stat = "identity", color = "red", size = 10) +
scale_y_continuous(sec.axis=sec_axis(~.*.01,name="Percentage")) +
xlab("Month") +
ylab("Cases") +
theme_bw()
epi_plot <- ggplot(epi) +
geom_bar(aes(Month, Cases), stat = "identity", color = "light blue") +
geom_line(aes(Month, Rate), stat = "identity", color = "red", size = 10) +
scale_y_continuous(sec.axis=sec_axis(~.*0.01,name="Percentage")) +
xlab("Month") +
ylab("Cases") +
theme_bw()
ggplotly(epi_plot)
epi_plot <- ggplot(epi) +
geom_histogram(aes(Month, Cases), stat = "identity", color = "light blue") +
geom_line(aes(Month, Rate), stat = "identity", color = "red", size = 10) +
scale_y_continuous(sec.axis=sec_axis(~.*0.01,name="Percentage")) +
xlab("Month") +
ylab("Cases") +
theme_bw()
ggplotly(epi_plot)
epi_plot <- ggplot(epi) +
geom_histogram(aes(Month, Cases), stat = "identity", color = "light blue", binwidth = 30) +
geom_line(aes(Month, Rate), stat = "identity", color = "red", size = 10) +
scale_y_continuous(sec.axis=sec_axis(~.*0.01,name="Percentage")) +
xlab("Month") +
ylab("Cases") +
theme_bw()
ggplotly(epi_plot)
epi_plot <- ggplot(epi) +
geom_histogram(aes(Month, Cases), stat = "identity", fill = "light blue") +
geom_line(aes(Month, Rate), stat = "identity", color = "red", size = 10) +
scale_y_continuous(sec.axis=sec_axis(~.*0.01,name="Percentage")) +
xlab("Month") +
ylab("Cases") +
theme_bw()
ggplotly(epi_plot)
epi_plot <- ggplot(epi) +
geom_histogram(aes(Month, Cases), stat = "identity", fill = "light blue") +
geom_line(aes(Month, Rate), stat = "identity", color = "red", size = 2) +
scale_y_continuous(sec.axis = sec_axis(~.*0.01, name = "Percentage" labels = scales::percent)) +
xlab("Month") +
ylab("Cases") +
theme_bw()
ggplotly(epi_plot)
epi_plot2 <- data.frame(Age_Group, Male_Rate, Female_Rate)
Age_Group <- c("<1", "1", "2", "3", "4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49", "50-54", "55-59", "60-64", "65-69", ">=70")
Male_Rate <- c(0, 8.6, 73.5, 70.7, 94.8, 122.6, 98.6, 3.3, .9, 1.1, 5.1, 6.3, 21.3, 18.8, 49.4, 25, 53.6, 37.7, 75.0)
Female_Rate <- c(0, 4.9, 43.8, 84.6, 99.7, 113.7, 74.5, 11.3, 39.8, 75.2, 65.3, 78.9, 70.1, 52.5, 45.6, 26.3, 19.6, 19.1, 17.5)
epi_plot2 <- data.frame(Age_Group, Male_Rate, Female_Rate)
ggplot(epi_plot2) +
geom_line(aes(Age_Group, Male_Rate), color = "blue") +
geom_line(aes(Age_Group, Female_Rate), color = "red")
View(epi_plot2)
ggplot(epi_plot2) +
geom_smooth(aes(Age_Group, Male_Rate), color = "blue") +
geom_smooth(aes(Age_Group, Female_Rate), color = "red")
((89/1905)/(98/1684))
y <- ((89/1905)/(98/1684))
58.2/28.4
8/639
66/1450
8/1186
33/885
8/639
66/1450
8/1186
33/885
x <- 8/639
y <- 66/1450
x/y
a <- 8/1186
a <- 8/1186
b <- 33/885
a/b
124.4/42.9
124.4/2.6
83.1/2.6
53.4/2.6
35.2/2.6
23.8/2.6
12.6/2.6
summary(cm.reg)
library(tidyverse)
library(tidyverse)
library(readr)
library(broom)
cm.data <- read.table("CH01PR20.txt", header = FALSE)
head(cm.data)
colnames(cm.data) <- c("Ytime", "Xcopiers")
cm.reg <- lm(Ytime ~ Xcopiers, data = cm.data)
cm.reg$coef
tidy(cm.reg)
resid(cm.reg)
#or
cm.reg$residuals
#preview residuals
head(cm.reg$residuals, 10)
#squared residuals
head(cm.reg$residuals^2, 10)
#sum of squared residuals
sum(cm.reg$residuals^2)
# s^2
(sum(cm.reg$residuals^2))/(45-2)
# s
sqrt((sum(cm.reg$residuals^2))/(45-2))
summary(cm.reg)
confint(cm.reg, level = 0.90)
(15.0352 - 0)/(0.4831)
pf(df = 43, 8.914)
pf(8.914, df = 43)
qt(0.1, 43)
1 - (qt(0.1, 43))
summary(cm.reg)
2 * pt(31.123, 43)
pt(31.123, 43)
2 * (1 - pt(31.123, 43))
pt(31.123, 43)
1 - pt(31.123, 43
sx
Critical Value Calculation:
qt(p = 0.1, df = 43)
qt(p = 0.05, df = 43)
pt(31.123, 43)
1 - pt(31.123, 43)
pt(31.123, 43, lower.tail = TRUE)
summary(cm.reg)
1 - (qt(0.05, 43))
1 - pt(-13.94431, 43)
summary(cm.reg)
15.0352 - 14
1.0352/.4831
1 - pt(2.14828, 43)
plot(Ytime~XCopier, data=cm.data)
View(cm.data)
plot(Ytime~Xcopiers, data=cm.data)
abline(cm.reg$coef)
newx<-seq(0, 45, by=0.25)
cm.CI<-predict(cm.reg, newdata=data.frame(Ytime=newx), interval="confidence", level=0.95)
plot(Ytime~Xcopiers, data=cm.data)
abline(cm.reg$coef)
cm.plot <- plot(Ytime~Xcopiers, data=cm.data)
abline(cm.reg$coef)
plot(Ytime~Xcopiers, data=cm.data)
abline(cm.reg$coef)
newx<-seq(0, 45, by=0.25)
cm.CI<-predict(cm.reg, newdata=data.frame(Ytime=newx), interval="confidence", level=0.95)
newx<-seq(0, 45, by=1)
cm.CI<-predict(cm.reg, newdata=data.frame(Ytime=newx), interval="confidence", level=0.95)
cm.CI<-predict(cm.reg, newdata=data.frame(Xcopiers=newx), interval="confidence", level=0.95)
cm.PI<-predict(cm.reg, newdata=data.frame(Xcopiers=newx), interval="prediction", level=0.95)
lines(newx, cm.CI[,2], lty=2, col=2)
plot(Ytime~Xcopiers, data=cm.data)
abline(cm.reg$coef)
newx<-seq(0, 45, by=1)
cm.CI<-predict(cm.reg, newdata=data.frame(Xcopiers=newx), interval="confidence", level=0.95)
cm.PI<-predict(cm.reg, newdata=data.frame(Xcopiers=newx), interval="prediction", level=0.95)
lines(newx, cm.CI[,2], lty=2, col=2)
lines(newx, cm.CI[,3], lty=2, col=2)
lines(newx, cm.PI[,2], lty=3, col=3, lwd=3)
lines(newx, cm.PI[,3], lty=3, col=3, lwd=3)
library(tidyverse)
library(rvest)
worldurl <- read_html(
"https://www.worldometers.info/world-population/population-by-country/")
worldpoptable <- worldurl%>%
html_table(., fill = T)
worldpoptable[[1]] -> wpt
wpt
wpt %>%
select(Country, Population) %>%
arrange(desc(Population)) %>%
print(5)
wpt %>%
select("Country (or dependency)", "Population 2020") %>%
arrange(desc(Population)) %>%
print(5)
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population 2020") %>%
select(Country, Population) %>%
arrange(desc(Population)) %>%
print(5)
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
select(Country, Population) %>%
arrange(desc(Population)) %>%
print(5)
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
select(Country, Population) %>%
arrange(desc(Population))
worldurl <- read_html(
"https://www.worldometers.info/world-population/population-by-country/")
worldpoptable <- worldurl%>%
html_table(., fill = T)
worldpoptable[[1]] -> wpt
wpt
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(Population)) %>%
select(Country, Population) %>%
arrange(desc(Population))
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)")
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(Population))
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population)))
select(Country, Population) %>%
arrange(desc(Population)) %>%
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
arrange(desc(Population)) %>%
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
arrange(desc(Population))
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
arrange(desc(Population)) %>%
print(wpt, 5)
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
arrange(desc(Population)) %>%
print(wpt, n = 5)
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
arrange(desc(Population)) %>%
head(wpt, 5)
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
head(wpt, 5)
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
head(wpt)
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
head(5)
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
arrange(desc(Population)) %>%
head(5)
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
filter(Country == "China" |"United States"|"Russia"|"Vietnam"|"South Africa") %>%
arrange(desc(Population))
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
filter(Country == China)
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
filter(Country = China)
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
filter(Country = "China")
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
filter(Country == "China")
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
filter(Country == "China", "United States", "Russia", "Vietnam", "South Africa") %>%
sort(desc(Population))
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
filter(Country == "China", "United States", "Russia", "Vietnam", "South Africa")
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
filter(Country == "China" & "United States" & "Russia" & "Vietnam" & "South Africa")
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
filter(Country == "China"  "United States"  "Russia"  "Vietnam" "South Africa")
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
filter(Country == "China" | Country == "United States" | Country == "Russia" | Country ==  "Vietnam" | Country == "South Africa")
wpt %>%
rename("Country" = "Country (or dependency)",
"Population" = "Population (2020)") %>%
mutate(Population = as.numeric(gsub(",","", Population))) %>%
select(Country, Population) %>%
filter(Country == "China" | Country == "United States" | Country == "Russia" | Country ==  "Vietnam" | Country == "South Africa") %>%
arrange(desc(Population))
setwd("C:/Users/chrtm/Desktop/DATA613/RShiny Project")
